# scripts/generate_readme.py

import os
from pathlib import Path

def extract_docstring(file_path: str) -> str:
    """Extract the first module-level docstring from a Python file."""
    with open(file_path, "r", encoding="utf-8") as file:
        content = file.read()
    if '"""' in content:
        start = content.find('"""') + 3
        end = content.find('"""', start)
        if end > start:
            return content[start:end].strip()
    if "'''" in content:
        start = content.find("'''") + 3
        end = content.find("'''", start)
        if end > start:
            return content[start:end].strip()
    return "No module docstring found."

def generate_readme():
    project_name = Path.cwd().name
    files = sorted(
        [f for f in os.listdir() if f.endswith(".py") and f != "generate_readme.py"]
    )

    readme_lines = [
        f"# {project_name}\n\n",
        f"Auto-generated README for **{project_name}**.\n\n",
        "## ðŸ§  Project Overview\n\n",
        "This README was automatically generated by reading Python source files.\n\n",
        "## ðŸ“¦ Python Modules\n\n",
    ]

    for file in files:
        doc = extract_docstring(file)
        readme_lines.append(f"### `{file}`\n\n{doc}\n\n")

    if os.path.exists("requirements.txt"):
        readme_lines.append("## ðŸ“š Dependencies\n\n")
        with open("requirements.txt", "r", encoding="utf-8") as reqs:
            for dep in reqs:
                dep = dep.strip()
                if dep:
                    readme_lines.append(f"- {dep}\n")
        readme_lines.append("\n")

    readme_lines.append("---\n\n*README auto-generated via GitHub Actions.*\n")

    with open("README.md", "w", encoding="utf-8") as f:
        f.writelines(readme_lines)

    print("âœ… README.md generated successfully.")

if __name__ == "__main__":
    generate_readme()
